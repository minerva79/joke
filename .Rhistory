library(jokes)
data()
joke
data(jokes)
data(joke)
jk
rm(list=ls())
joke <- function(n=1, t=5, pause=TRUE){
rn <- sample(1:38269, n)
for(i in 1:n){
e_jk <- data(joke)[rn[i],]
cat(paste("Question - \n\n     ", as.character(e_jk$Question)))
Sys.sleep(t)
cat("\n \n")
cat(paste("Answer - \n\n     ", as.character(e_jk$Answer)))
if(n > 1) cat("\n \n === \n \n")
if(pause) Sys.sleep(2)
}
}
joke()
joke <- function(n=1, t=5, pause=TRUE){
rn <- sample(1:38269, n)
for(i in 1:n){
e_jk <- data(joke)
e_jk <- data.frame(e_jk)[rn[i],]
cat(paste("Question - \n\n     ", as.character(e_jk$Question)))
Sys.sleep(t)
cat("\n \n")
cat(paste("Answer - \n\n     ", as.character(e_jk$Answer)))
if(n > 1) cat("\n \n === \n \n")
if(pause) Sys.sleep(2)
}
}
joke()
rm(list=ls)
rm(list=ls())
jk
jokes::jk
joke <- function(n=1, t=5, pause=TRUE){
rn <- sample(1:38269, n)
for(i in 1:n){
e_jk <- jokes::jk[rn[i],]
cat(paste("Question - \n\n     ", as.character(e_jk$Question)))
Sys.sleep(t)
cat("\n \n")
cat(paste("Answer - \n\n     ", as.character(e_jk$Answer)))
if(n > 1) cat("\n \n === \n \n")
if(pause) Sys.sleep(2)
}
}
joke()
joke <- function(n=1, t=3, pause=TRUE){
rn <- sample(1:38269, n)
for(i in 1:n){
e_jk <- jokes::jk[rn[i],]
cat(paste("Question - \n\n     ", as.character(e_jk$Question)))
Sys.sleep(t)
cat("\n \n")
cat(paste("Answer - \n\n     ", as.character(e_jk$Answer)))
if(n > 1) cat("\n \n === \n \n")
if(pause) Sys.sleep(2)
}
}
joke()
joke
library(jokes)
?joke
library(jokes)
?joke
library(jokes)
?joke
joke
joke()
library(joke)
?joke
joke()
joke::joke
joke::joke()
ref.tbl <- structure(list(K = c("K1", "K2", "K3", "K1", "K2", "K3", "K1",
"K2", "K3", "K1", "K2", "K3", "K1", "K2", "K3", "K1", "K2", "K3",
"K1", "K2", "K3", "K1", "K2", "K3", "K1", "K2", "K3", "K1", "K2",
"K3"), some_score = c("0.09651", "0.09787", "0.09526", "0.09543",
"0.09479", "0.09435", "0.09122", "0.09123", "0.09024", "0.09458",
"0.09478", "0.09299", "0.09382", "0.09450", "0.09285", "0.10158",
"0.10127", "0.09889", "0.10339", "0.10476", "0.10370", "0.13594",
"0.13257", "0.14651", "0.09458", "0.09473", "0.09325", "0.09296",
"0.09350", "0.09196")), .Names = c("K", "some_score"), class = c("tbl_df",
"tbl", "data.frame"), row.names = c(NA, -30L))
ref.tbl
aqlib::lib()
s1.tbl <- structure(list(Sample_name = c("s1", "s1", "s1", "s1", "s1",
"s1", "s1", "s1", "s1", "s1"), some_score = c("0.04741", "0.06210",
"0.09606", "0.08851", "0.05063", "0.39775", "0.05509", "0.10784",
"0.04680", "0.04782")), .Names = c("Sample_name", "some_score"
), row.names = c(NA, -10L), class = c("tbl_df", "tbl", "data.frame"
))
s1.tbl
ref.k1 <- ref.tbl %>%
select(Sample_name = K, some_score) %>%
filter(Sample_name=="K1")
dat <- dplyr::bind_rows(ref.k1,s1.tbl)
dat
ggplot(dat, aes(x = some_score)) +
stat_ecdf(aes(group = Sample_name, colour = Sample_name)) +
scale_color_manual(values = c("black","red")) +
theme_minimal(base_size=10) +
theme(strip.background=element_blank(),strip.text = element_text(size=5)) +
theme(legend.title=element_blank()) +
theme(axis.text.x=element_text(angle=45, hjust=1,size=10)) +
theme(axis.text.y=element_text( hjust=1,size=5))
dat
ref.k <- ref.tbl
ref.k
data.frame(ref.k)
bind_rows(ref.k,s1.tbl)
dat <- bind_rows(ref.k,s1.tbl)
ggplot(dat, aes(x = some_score)) +
stat_ecdf(aes(group = Sample_name, colour = Sample_name))
dat
dplyr::bind_rows(ref.k1,s1.tbl)
s1.tbl
ref.k
dat <- data.frame(ref.tbl, rep(s1.tbl, 3))
dat
s1.tbl
dat <- data.frame(ref.tbl, s1.tbl)
dat
ggplot(dat, aes(some_score.1, some_score, colour=K)) + geom_line()
ggplot(dat, aes(some_score.1, some_score, colour=as.factor(K)) + geom_line()
ggplot(dat, aes(some_score.1, some_score, colour=as.factor(K))) + geom_line()
ggplot(dat, aes(some_score.1, some_score, colour=as.factor(K)) + geom_point()
ggplot(dat, aes(some_score.1, some_score, colour=as.factor(K))) + geom_point()
ggplot(dat, aes(some_score.1, some_score, colour=as.factor(K))) + stat_ecdf()
ggplot(dat, aes(some_score, colour=as.factor(K))) + stat_ecdf()
ggplot(ref.tbl, aes(some_score, colour=as.factor(K))) + stat_ecdf()
ggplot(dat, aes(some_score) + stat_ecdf(aes(group = K, colour = K))
)
ggplot(dat, aes(some_score) + stat_ecdf(aes(group = K %>% as.factor, colour = K %>% as.factor)))
str(dat)
ggplot(dat, aes(some_score %>% as.numeric) + stat_ecdf(aes(group = K %>% as.factor, colour = K %>% as.factor)))
ggplot(dat, aes(some_score %>% as.numeric) + stat_ecdf()
)
ggplot(dat, aes(some_score %>% as.numeric)) + stat_ecdf()
ggplot(dat, aes(some_score %>% as.numeric)) + stat_ecdf(aes(group=K))
ggplot(dat, aes(some_score %>% as.numeric)) + stat_ecdf(aes(group=K), colour="black") + stat_ecdf(aes(x=some_score.1%>% as.numeric), colour="red")
ref.tbl
rbind(ref.tbl, s1)
rbind(ref.tbl, s1.tbl)
s1.tbl
ref.tbl
s1.tbl %>% mutate(some_score=some_score %>% as.numeric)
s1.tbl <- s1.tbl %>% mutate(some_score=some_score %>% as.numeric)
ref.tbl <- ref.tbl %>% mutat(some_score=some_score %>% as.numeric)
ref.tbl <- ref.tbl %>% mutate(some_score=some_score %>% as.numeric)
dat <- rbind(s1.tbl, ref.tbl)
ref.tbl <- ref.tbl %>% mutate(some_score=some_score %>% as.numeric) %>% setNames(c("Sample_name", "some_score"))
ref.tbl
rbind(s1.tbl, ref.tbl)
dat <- rbind(s1.tbl, ref.tbl)
ggplot(dat, aes(some_score, colour=Sample_name)) + stat_ecdf())
ggplot(dat, aes(some_score, colour=Sample_name)) + stat_ecdf()
levels(dat$Sample_name)
levels(dat$Sample_name %>% as.factor)
ggplot(dat, aes(x = some_score)) +
stat_ecdf(aes(group = Sample_name, colour = Sample_name)) +
scale_color_manual(values = c(rep("black",3),"red"))
ggplot(dat, aes(x = some_score)) +
stat_ecdf(aes(group = Sample_name, colour = Sample_name)) +
scale_color_manual(values = c(rep("black",3),"red")) + theme_minimal(base_size=10) +
theme(strip.background=element_blank(),strip.text = element_text(size=5)) +
theme(legend.title=element_blank()) +
theme(axis.text.x=element_text(angle=45, hjust=1,size=10)) +
theme(axis.text.y=element_text( hjust=1,size=5))
library(joke)
jk
grep("fungi", jk$Question)
grep("fungi", jk$Question, value=T)
findJoke <- function(keyword, t=3, pause=TRUE){
idq <- grep(keyword, joke::jk[, "Question"])
ida <- grep(keyword, joke::jk[, "Answer"])
idn <- unique(c(idq, ida))
for(i in 1:length(idn)){
e_jk <- joke::jk[i, ]
cat(paste("Question - \n\n     ", as.character(e_jk$Question)))
Sys.sleep(t)
cat("\n \n")
cat(paste("Answer - \n\n     ", as.character(e_jk$Answer)))
if(length(idn) > 1) cat("\n \n === \n \n")
if(pause) Sys.sleep(1.5)
}
}
findJoke("Guy")
grep("fungi", jk$Question, value=T)
grep("fungi", jk$Answer, value=T)
grep("fungi", jk$Answer)
jk[328,]
grep("Guy", jk$Answer)
jk[5135,]
grep("Guy", jk$Question)
jk[1393,]
findJoke <- function(keyword, t=3, pause=TRUE){
idq <- grep(keyword, joke::jk[, "Question"])
ida <- grep(keyword, joke::jk[, "Answer"])
idn <- unique(c(idq, ida))
return(idn)
}
findJoke("Guy")
findJoke("guy")
findJoke <- function(keyword, t=3, pause=TRUE){
idq <- grep(keyword, joke::jk[, "Question"])
ida <- grep(keyword, joke::jk[, "Answer"])
idn <- unique(c(idq, ida))
for(i in 1:length(idn)){
e_jk <- joke::jk[i, ]
cat(paste("Question - \n\n     ", as.character(e_jk$Question)))
Sys.sleep(t)
cat("\n \n")
cat(paste("Answer - \n\n     ", as.character(e_jk$Answer)))
if(length(idn) > 1) cat("\n \n === \n \n")
if(pause) Sys.sleep(1.5)
}
}
findJoke("fungi")
findJoke <- function(keyword, t=3, pause=TRUE){
idq <- grep(keyword, joke::jk[, "Question"])
ida <- grep(keyword, joke::jk[, "Answer"])
idn <- unique(c(idq, ida))
for(i in 1:length(idn)){
e_jk <- joke::jk[idn[i], ]
cat(paste("Question - \n\n     ", as.character(e_jk$Question)))
Sys.sleep(t)
cat("\n \n")
cat(paste("Answer - \n\n     ", as.character(e_jk$Answer)))
if(length(idn) > 1) cat("\n \n === \n \n")
if(pause) Sys.sleep(1.5)
}
}
findJoke("fungi")
findJoke <- function(keyword, t=0, pause=FALSE){
idq <- grep(keyword, joke::jk[, "Question"])
ida <- grep(keyword, joke::jk[, "Answer"])
idn <- unique(c(idq, ida))
for(i in 1:length(idn)){
e_jk <- joke::jk[idn[i], ]
cat(paste("Question - \n\n     ", as.character(e_jk$Question)))
Sys.sleep(t)
cat("\n \n")
cat(paste("Answer - \n\n     ", as.character(e_jk$Answer)))
if(length(idn) > 1) cat("\n \n === \n \n")
if(pause) Sys.sleep(1.5)
}
}
findJoke("vape")
findJoke("Vape")
?break
findJoke <- function(keyword, t=0, pause=FALSE){
idq <- grep(keyword, joke::jk[, "Question"])
ida <- grep(keyword, joke::jk[, "Answer"])
idn <- unique(c(idq, ida))
if(idn==0) return(paste("Jokes with", keyword, "not found"))
# break
for(i in 1:length(idn)){
e_jk <- joke::jk[idn[i], ]
cat(paste("Question - \n\n     ", as.character(e_jk$Question)))
Sys.sleep(t)
cat("\n \n")
cat(paste("Answer - \n\n     ", as.character(e_jk$Answer)))
if(length(idn) > 1) cat("\n \n === \n \n")
if(pause) Sys.sleep(1.5)
}
}
findJoke("fungi")
findJoke <- function(keyword, t=0, pause=FALSE){
idq <- grep(keyword, joke::jk[, "Question"])
ida <- grep(keyword, joke::jk[, "Answer"])
idn <- unique(c(idq, ida))
if(idn==0) break
for(i in 1:length(idn)){
e_jk <- joke::jk[idn[i], ]
cat(paste("Question - \n\n     ", as.character(e_jk$Question)))
Sys.sleep(t)
cat("\n \n")
cat(paste("Answer - \n\n     ", as.character(e_jk$Answer)))
if(length(idn) > 1) cat("\n \n === \n \n")
if(pause) Sys.sleep(1.5)
}
}
findJoke("fungi")
findJoke <- function(keyword, t=0, pause=FALSE){
idq <- grep(keyword, joke::jk[, "Question"])
ida <- grep(keyword, joke::jk[, "Answer"])
idn <- unique(c(idq, ida))
if(length(idn)==0) break
for(i in 1:length(idn)){
e_jk <- joke::jk[idn[i], ]
cat(paste("Question - \n\n     ", as.character(e_jk$Question)))
Sys.sleep(t)
cat("\n \n")
cat(paste("Answer - \n\n     ", as.character(e_jk$Answer)))
if(length(idn) > 1) cat("\n \n === \n \n")
if(pause) Sys.sleep(1.5)
}
}
findJoke("fungi")
findJoke("vape")
findJoke("Vape")
findJoke <- function(keyword, t=0, pause=FALSE){
idq <- grep(keyword, joke::jk[, "Question"])
ida <- grep(keyword, joke::jk[, "Answer"])
idn <- unique(c(idq, ida))
if(length(idn)==0) return(paste("Joke with", keyword, "not found."))
for(i in 1:length(idn)){
e_jk <- joke::jk[idn[i], ]
cat(paste("Question - \n\n     ", as.character(e_jk$Question)))
Sys.sleep(t)
cat("\n \n")
cat(paste("Answer - \n\n     ", as.character(e_jk$Answer)))
if(length(idn) > 1) cat("\n \n === \n \n")
if(pause) Sys.sleep(1.5)
}
}
findJoke("Vape")
findJoke("vape")
findJoke <- function(keyword, t=0, pause=FALSE){
idq <- grep(keyword, joke::jk[, "Question"])
ida <- grep(keyword, joke::jk[, "Answer"])
idn <- unique(c(idq, ida))
if(length(idn)==0) return(paste0('Jokes with "', keyword, '" not found."'))
for(i in 1:length(idn)){
e_jk <- joke::jk[idn[i], ]
cat(paste("Question - \n\n     ", as.character(e_jk$Question)))
Sys.sleep(t)
cat("\n \n")
cat(paste("Answer - \n\n     ", as.character(e_jk$Answer)))
if(length(idn) > 1) cat("\n \n === \n \n")
if(pause) Sys.sleep(1.5)
}
}
findJoke("vape")
findJoke("Vape")
findJoke <- function(keyword, t=0, pause=FALSE){
idq <- grep(keyword, joke::jk[, "Question"])
ida <- grep(keyword, joke::jk[, "Answer"])
idn <- unique(c(idq, ida))
if(length(idn)==0) return(paste0('Jokes with \\"', keyword, '\\" not found."'))
for(i in 1:length(idn)){
e_jk <- joke::jk[idn[i], ]
cat(paste("Question - \n\n     ", as.character(e_jk$Question)))
Sys.sleep(t)
cat("\n \n")
cat(paste("Answer - \n\n     ", as.character(e_jk$Answer)))
if(length(idn) > 1) cat("\n \n === \n \n")
if(pause) Sys.sleep(1.5)
}
}
findJoke("Vape")
findJoke <- function(keyword, t=0, pause=FALSE){
idq <- grep(keyword, joke::jk[, "Question"])
ida <- grep(keyword, joke::jk[, "Answer"])
idn <- unique(c(idq, ida))
if(length(idn)==0) return(paste0('Jokes with //"', keyword, '//" not found."'))
for(i in 1:length(idn)){
e_jk <- joke::jk[idn[i], ]
cat(paste("Question - \n\n     ", as.character(e_jk$Question)))
Sys.sleep(t)
cat("\n \n")
cat(paste("Answer - \n\n     ", as.character(e_jk$Answer)))
if(length(idn) > 1) cat("\n \n === \n \n")
if(pause) Sys.sleep(1.5)
}
}
findJoke("Vape")
findJoke <- function(keyword, t=0, pause=FALSE){
idq <- grep(keyword, joke::jk[, "Question"])
ida <- grep(keyword, joke::jk[, "Answer"])
idn <- unique(c(idq, ida))
if(length(idn)==0) return(cat(paste0('Jokes with \\"', keyword, '\\" not found."')))
for(i in 1:length(idn)){
e_jk <- joke::jk[idn[i], ]
cat(paste("Question - \n\n     ", as.character(e_jk$Question)))
Sys.sleep(t)
cat("\n \n")
cat(paste("Answer - \n\n     ", as.character(e_jk$Answer)))
if(length(idn) > 1) cat("\n \n === \n \n")
if(pause) Sys.sleep(1.5)
}
}
findJoke("Vape")
findJoke <- function(keyword, t=0, pause=FALSE){
idq <- grep(keyword, joke::jk[, "Question"])
ida <- grep(keyword, joke::jk[, "Answer"])
idn <- unique(c(idq, ida))
if(length(idn)==0) return(cat(paste0('Jokes with "', keyword, '" not found."')))
for(i in 1:length(idn)){
e_jk <- joke::jk[idn[i], ]
cat(paste("Question - \n\n     ", as.character(e_jk$Question)))
Sys.sleep(t)
cat("\n \n")
cat(paste("Answer - \n\n     ", as.character(e_jk$Answer)))
if(length(idn) > 1) cat("\n \n === \n \n")
if(pause) Sys.sleep(1.5)
}
}
findJoke("Vape")
findJoke <- function(keyword, t=0, pause=FALSE){
idq <- grep(keyword, joke::jk[, "Question"])
ida <- grep(keyword, joke::jk[, "Answer"])
idn <- unique(c(idq, ida))
if(length(idn)==0) return(cat(paste0('Jokes with "', keyword, '" not found.')))
for(i in 1:length(idn)){
e_jk <- joke::jk[idn[i], ]
cat(paste("Question - \n\n     ", as.character(e_jk$Question)))
Sys.sleep(t)
cat("\n \n")
cat(paste("Answer - \n\n     ", as.character(e_jk$Answer)))
if(length(idn) > 1) cat("\n \n === \n \n")
if(pause) Sys.sleep(1.5)
}
}
findJoke("Vape")
findJoke("vape")
findJoke
joke("fungi")
findJoke("fungi")
findJoke("fungi")[1:2]
findJoke <- function(keyword, t=0, pause=FALSE, limit=6){
idq <- grep(keyword, joke::jk[, "Question"])
ida <- grep(keyword, joke::jk[, "Answer"])
idn <- unique(c(idq, ida))
if(length(idn) > limit) idn <- idn[1:limit]
if(length(idn)==0) return(cat(paste0('Jokes with "', keyword, '" not found.')))
for(i in 1:length(idn)){
e_jk <- joke::jk[idn[i], ]
cat(paste("Question - \n\n     ", as.character(e_jk$Question)))
Sys.sleep(t)
cat("\n \n")
cat(paste("Answer - \n\n     ", as.character(e_jk$Answer)))
if(length(idn) > 1) cat("\n \n === \n \n")
if(pause) Sys.sleep(1.5)
}
}
findJoke("fungi")
idn
arrange(c(1,10,8, 9, 2))
order(c(1,10,8, 9, 2))
findJoke <- function(keyword, t=0, pause=FALSE, max=6){
idq <- grep(keyword, joke::jk[, "Question"])
ida <- grep(keyword, joke::jk[, "Answer"])
idn <- unique(c(idq, ida))
idn <- idn[order(idn)]
if(length(idn)==0) return(cat(paste0('Jokes with "', keyword, '" not found.')))
if(length(idn) > max) idn <- idn[1:max]
for(i in 1:length(idn)){
e_jk <- joke::jk[idn[i], ]
cat(paste("Question - \n\n     ", as.character(e_jk$Question)))
Sys.sleep(t)
cat("\n \n")
cat(paste("Answer - \n\n     ", as.character(e_jk$Answer)))
if(length(idn) > 1) cat("\n \n === \n \n")
if(pause) Sys.sleep(1.5)
}
}
findJoke("fungi")
joke("fungi", max=2)
findJoke <- function(keyword, t=0, pause=FALSE, max=6){
idq <- grep(keyword, joke::jk[, "Question"])
ida <- grep(keyword, joke::jk[, "Answer"])
idn <- unique(c(idq, ida))
idn <- idn[order(idn)]
if(length(idn)==0) return(cat(paste0('Jokes with "', keyword, '" not found.')))
if(length(idn) > max) idn <- idn[1:max]
for(i in 1:length(idn)){
e_jk <- joke::jk[idn[i], ]
cat(paste("Question - \n\n     ", as.character(e_jk$Question)))
Sys.sleep(t)
cat("\n \n")
cat(paste("Answer - \n\n     ", as.character(e_jk$Answer)))
if(length(idn) > 1) cat("\n \n === \n \n")
if(pause) Sys.sleep(1.5)
}
}
findJoke("fungi", max=2)
library(joke)
